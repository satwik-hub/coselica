// Copyright (C) 2010 - DIGITEO

// This file is released into the public domain

mode(-1);
lines(0);

TOOLBOX_NAME  = "coselica";
TOOLBOX_TITLE = "COSELICA";
toolbox_dir   = get_absolute_file_path("builder.sce");

// Check Scilab's version
// =============================================================================

try
	v = getversion("scilab");
catch
	error(gettext("Scilab 5.2 or more is required."));
end

if v(2) < 3 then
	// new API in scilab 5.3
	error(gettext('Scilab 5.3 or more is required.'));  
end

// Check development_tools module avaibility
// =============================================================================

if ~with_module('development_tools') then
  error(msprintf(gettext('%s module not installed."),'development_tools'));
end

// Action
// =============================================================================

tbx_builder_macros(toolbox_dir);
tbx_build_loader(TOOLBOX_NAME, toolbox_dir);
tbx_build_cleaner(TOOLBOX_NAME, toolbox_dir);

// Build xcos palette
// =============================================================================

loadScicosLibs();

getd(toolbox_dir + filesep() + 'macros/Blocks/Continuous');
getd(toolbox_dir + filesep() + 'macros/Blocks/Nonlinear');
getd(toolbox_dir + filesep() + 'macros/Blocks/Interfaces');
getd(toolbox_dir + filesep() + 'macros/Blocks/Math');
getd(toolbox_dir + filesep() + 'macros/Blocks/Routing');
getd(toolbox_dir + filesep() + 'macros/Blocks/Sources');
getd(toolbox_dir + filesep() + 'macros/Thermal/HeatTransfer');
getd(toolbox_dir + filesep() + 'macros/Electrical');
getd(toolbox_dir + filesep() + 'macros/Mechanics/Rotational');
getd(toolbox_dir + filesep() + 'macros/Mechanics/Planar');
getd(toolbox_dir + filesep() + 'macros/Mechanics/Translational');

// creating images path
if fileinfo (toolbox_dir + "/images") == [] then
    mkdir(toolbox_dir + "/images");
end
if fileinfo (toolbox_dir + "/images/h5") == [] then
    mkdir(toolbox_dir + "/images/h5");
end

///////////////////////////////
// Blocks continuous palette //
///////////////////////////////

Icons_list = ['macros/Blocks/Continuous/gif_icons/MBC_LimPID.gif'; ...
              'macros/Blocks/Continuous/gif_icons/MBC_PID.gif'; ...
              'macros/Blocks/Continuous/gif_icons/MBC_FirstOrder.gif'; ...
              'macros/Blocks/Continuous/gif_icons/MBC_LimIntegrator.gif'; ...
              'macros/Blocks/Continuous/gif_icons/MBC_Derivative.gif'; ...
              'macros/Blocks/Continuous/gif_icons/MBC_PI.gif'; ...
              'macros/Blocks/Continuous/gif_icons/MBC_Der.gif'; ...
              'macros/Blocks/Continuous/gif_icons/MBC_Integrator.gif'; ...
              'macros/Blocks/Continuous/gif_icons/MBC_SecondOrder.gif'];

xpal = xcosPal("Blocks continuous");

for i=1:size(Icons_list,1)
  palette_icon = toolbox_dir + filesep() + Icons_list(i);
  xcos_icon    = toolbox_dir + filesep() + Icons_list(i);
  macro_name   = basename(Icons_list(i));
  scs_m        = eval(macro_name + '(''define'')'); 
  export_to_hdf5(toolbox_dir + '/images/h5/' + macro_name + '.h5','scs_m');
  clear scs_m;
  //xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, xcos_icon); // YC: fonctionnerait selon clÃ©ment
  xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, palette_icon);
end

// Now save the palette
xcosPalExport(xpal, toolbox_dir + '/coselica_blocks_continuous.xpal');

//////////////////////////////
// Blocks nonlinear palette //
//////////////////////////////

Icons_list = ['macros/Blocks/Nonlinear/gif_icons/MBN_Limiter.gif'; ...
              'macros/Blocks/Nonlinear/gif_icons/MBN_DeadZone.gif'];

xpal = xcosPal("Blocks nonlinear");

for i=1:size(Icons_list,1)
  palette_icon = toolbox_dir + filesep() + Icons_list(i);
  xcos_icon    = toolbox_dir + filesep() + Icons_list(i);
  macro_name   = basename(Icons_list(i));
  scs_m        = eval(macro_name + '(''define'')'); 
  export_to_hdf5(toolbox_dir + '/images/h5/' + macro_name + '.h5','scs_m');
  clear scs_m;
  //xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, xcos_icon);
  xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, palette_icon);
end

// Now save the palette
xcosPalExport(xpal, toolbox_dir + '/coselica_blocks_nonlinear.xpal');

//////////////////////////////
// Blocks interface palette //
//////////////////////////////

Icons_list = ['macros/Blocks/Interfaces/gif_icons/CBI_RealOutput.gif'; ...
              'macros/Blocks/Interfaces/gif_icons/CBI_RealInput.gif'];

xpal = xcosPal("Blocks interface");

for i=1:size(Icons_list,1)
  palette_icon = toolbox_dir + filesep() + Icons_list(i);
  xcos_icon    = toolbox_dir + filesep() + Icons_list(i);
  macro_name   = basename(Icons_list(i));
  scs_m        = eval(macro_name + '(''define'')'); 
  export_to_hdf5(toolbox_dir + '/images/h5/' + macro_name + '.h5','scs_m');
  clear scs_m;
  //xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, xcos_icon);
  xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, palette_icon);
end

// Now save the palette
xcosPalExport(xpal, toolbox_dir + '/coselica_blocks_interface.xpal');

/////////////////////////
// Blocks math palette //
/////////////////////////

Icons_list = ['macros/Blocks/Math/gif_icons/MBM_Sin.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Sqrt.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Tanh.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Log.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Feedback.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Sign.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Atan.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Acos.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Cos.gif'; ...
              'macros/Blocks/Math/gif_icons/CBM_TwoOutputs.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Exp.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Min.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Cosh.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Asin.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Abs.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Tan.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Product.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Max.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Division.gif'; ...
              'macros/Blocks/Math/gif_icons/CBM_Atan2.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Gain.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Sinh.gif'; ...
              'macros/Blocks/Math/gif_icons/CBM_TwoInputs.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Log10.gif'; ...
              'macros/Blocks/Math/gif_icons/MBM_Add.gif'];

xpal = xcosPal("Blocks math");

for i=1:size(Icons_list,1)
  palette_icon = toolbox_dir + filesep() + Icons_list(i);
  xcos_icon    = toolbox_dir + filesep() + Icons_list(i);
  macro_name   = basename(Icons_list(i));
  scs_m        = eval(macro_name + '(''define'')'); 
  export_to_hdf5(toolbox_dir + '/images/h5/' + macro_name + '.h5','scs_m');
  clear scs_m;
  //xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, xcos_icon);
  xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, palette_icon);
end

// Now save the palette
xcosPalExport(xpal, toolbox_dir + '/coselica_blocks_math.xpal');

////////////////////////////
// Blocks routing palette //
////////////////////////////

Icons_list = ['macros/Blocks/Routing/gif_icons/CBR_DeMultiplex2.gif'; ...
              'macros/Blocks/Routing/gif_icons/CBR_Multiplex2.gif'];

xpal = xcosPal("Blocks routing");

for i=1:size(Icons_list,1)
  palette_icon = toolbox_dir + filesep() + Icons_list(i);
  xcos_icon    = toolbox_dir + filesep() + Icons_list(i);
  macro_name   = basename(Icons_list(i));
  scs_m        = eval(macro_name + '(''define'')'); 
  export_to_hdf5(toolbox_dir + '/images/h5/' + macro_name + '.h5','scs_m');
  clear scs_m;
  //xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, xcos_icon);
  xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, palette_icon);
end

// Now save the palette
xcosPalExport(xpal, toolbox_dir + '/coselica_blocks_routing.xpal');

////////////////////////////
// Blocks sources palette //
////////////////////////////

Icons_list = ['macros/Blocks/Sources/gif_icons/MBS_Pulse.gif'; ...
              'macros/Blocks/Sources/gif_icons/MBS_Ramp.gif'; ...
              'macros/Blocks/Sources/gif_icons/MBS_Clock.gif'; ...
              'macros/Blocks/Sources/gif_icons/MBS_ExpSine.gif'; ...
              'macros/Blocks/Sources/gif_icons/MBS_SawTooth.gif'; ...
              'macros/Blocks/Sources/gif_icons/CBS_Trapezoid.gif'; ...
              'macros/Blocks/Sources/gif_icons/MBS_Constant.gif'; ...
              'macros/Blocks/Sources/gif_icons/MBS_Step.gif'; ...
              'macros/Blocks/Sources/gif_icons/MBS_Sine.gif'; ...
              'macros/Blocks/Sources/gif_icons/MBS_Exponentials.gif'];

xpal = xcosPal("Blocks sources");

for i=1:size(Icons_list,1)
  palette_icon = toolbox_dir + filesep() + Icons_list(i);
  xcos_icon    = toolbox_dir + filesep() + Icons_list(i);
  macro_name   = basename(Icons_list(i));
  scs_m        = eval(macro_name + '(''define'')'); 
  export_to_hdf5(toolbox_dir + '/images/h5/' + macro_name + '.h5','scs_m');
  clear scs_m;
  //xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, xcos_icon);
  xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, palette_icon);
end

// Now save the palette
xcosPalExport(xpal, toolbox_dir + '/coselica_blocks_sources.xpal');

//////////////////////////////////
// Thermal HeatTransfer palette //
//////////////////////////////////

Icons_list = ['macros/Thermal/HeatTransfer/gif_icons/MTHC_FromKelvin.gif'; ...
              'macros/Thermal/HeatTransfer/gif_icons/MTHC_FixedTemperature.gif'; ...
              'macros/Thermal/HeatTransfer/gif_icons/MTH_Convection.gif'; ...
              'macros/Thermal/HeatTransfer/gif_icons/MTH_PrescribedTemperatur.gif'; ...
              'macros/Thermal/HeatTransfer/gif_icons/MTH_FixedHeatFlow.gif'; ...
              'macros/Thermal/HeatTransfer/gif_icons/MTHC_TemperatureSensor.gif'; ...
              'macros/Thermal/HeatTransfer/gif_icons/MTH_RelTemperatureSensor.gif'; ...
              'macros/Thermal/HeatTransfer/gif_icons/MTH_PrescribedHeatFlow.gif'; ...
              'macros/Thermal/HeatTransfer/gif_icons/MTH_TemperatureSensor.gif'; ...
              'macros/Thermal/HeatTransfer/gif_icons/MTH_FixedTemperature.gif'; ...
              'macros/Thermal/HeatTransfer/gif_icons/MTHC_PrescribedTemperatu.gif'; ...
              'macros/Thermal/HeatTransfer/gif_icons/MTH_BodyRadiation.gif'; ...
              'macros/Thermal/HeatTransfer/gif_icons/MTHC_ToKelvin.gif'; ...
              'macros/Thermal/HeatTransfer/gif_icons/MTH_HeatCapacitor.gif'; ...
              'macros/Thermal/HeatTransfer/gif_icons/MTH_HeatFlowSensor.gif'; ...
              'macros/Thermal/HeatTransfer/gif_icons/MTH_ThermalConductor.gif'];

xpal = xcosPal("Thermal heat transfert");

for i=1:size(Icons_list,1)
  palette_icon = toolbox_dir + filesep() + Icons_list(i);
  xcos_icon    = toolbox_dir + filesep() + Icons_list(i);
  macro_name   = basename(Icons_list(i));
  scs_m        = eval(macro_name + '(''define'')'); 
  export_to_hdf5(toolbox_dir + '/images/h5/' + macro_name + '.h5','scs_m');
  clear scs_m;
  //xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, xcos_icon);
  xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, palette_icon);
end

// Now save the palette
xcosPalExport(xpal, toolbox_dir + '/coselica_thermal_heattransfert.xpal');

////////////////////////
// Electrical palette //
////////////////////////

Icons_list = ['macros/Electrical/gif_icons/MEAS_SignalCurrent.gif'; ...
              'macros/Electrical/gif_icons/MEAS_ConstantCurrent.gif'; ...
              'macros/Electrical/gif_icons/MEAB_VariableInductor.gif'; ...
              'macros/Electrical/gif_icons/MEAB_OpAmp.gif'; ...
              'macros/Electrical/gif_icons/MEAS_SineVoltage.gif'; ...
              'macros/Electrical/gif_icons/MEAB_VariableCapacitor.gif'; ...
              'macros/Electrical/gif_icons/MEAI_IdealOpeningSwitch.gif'; ...
              'macros/Electrical/gif_icons/MEAB_Inductor.gif'; ...
              'macros/Electrical/gif_icons/MEAI_Idle.gif'; ...
              'macros/Electrical/gif_icons/MEAI_Short.gif'; ...
              'macros/Electrical/gif_icons/MEAB_VCV.gif'; ...
              'macros/Electrical/gif_icons/MEAB_Resistor.gif'; ...
              'macros/Electrical/gif_icons/MEAS_RampCurrent.gif'; ...
              'macros/Electrical/gif_icons/MEAS_PNP.gif'; ...
              'macros/Electrical/gif_icons/MEAS_PulseVoltage.gif'; ...
              'macros/Electrical/gif_icons/MEAS_StepVoltage.gif'; ...
              'macros/Electrical/gif_icons/MEAS_PulseCurrent.gif'; ...
              'macros/Electrical/gif_icons/MEAS_PMOS.gif'; ...
              'macros/Electrical/gif_icons/MEAS_NMOS.gif'; ...
              'macros/Electrical/gif_icons/MEAB_CCC.gif'; ...
              'macros/Electrical/gif_icons/MEAS_PotentialSensor.gif'; ...
              'macros/Electrical/gif_icons/MEAS_ConstantVoltage.gif'; ...
              'macros/Electrical/gif_icons/MEAS_SawToothCurrent.gif'; ...
              'macros/Electrical/gif_icons/MEAS_RampVoltage.gif'; ...
              'macros/Electrical/gif_icons/MEAI_IdealClosingSwitch.gif'; ...
              'macros/Electrical/gif_icons/MEAB_EMF.gif'; ...
              'macros/Electrical/gif_icons/MEAI_IdealGyrator.gif'; ...
              'macros/Electrical/gif_icons/MEAS_SignalVoltage.gif'; ...
              'macros/Electrical/gif_icons/MEAS_Diode.gif'; ...
              'macros/Electrical/gif_icons/MEAS_NPN.gif'; ...
              'macros/Electrical/gif_icons/MEAB_HeatingResistor.gif'; ...
              'macros/Electrical/gif_icons/MEAI_IdealTransformer.gif'; ...
              'macros/Electrical/gif_icons/MEAS_SineCurrent.gif'; ...
              'macros/Electrical/gif_icons/MEAB_Capacitor.gif'; ...
              'macros/Electrical/gif_icons/MEAS_SawToothVoltage.gif'; ...
              'macros/Electrical/gif_icons/MEAS_StepCurrent.gif'; ...
              'macros/Electrical/gif_icons/MEAB_Ground.gif'; ...
              'macros/Electrical/gif_icons/MEAB_VariableResistor.gif'; ...
              'macros/Electrical/gif_icons/MEAB_CCV.gif'; ...
              'macros/Electrical/gif_icons/MEAB_Gyrator.gif'; ...
              'macros/Electrical/gif_icons/MEAB_VCC.gif'; ...
              'macros/Electrical/gif_icons/MEAB_Transformer.gif'; ...
              'macros/Electrical/gif_icons/MEAS_CurrentSensor.gif'; ...
              'macros/Electrical/gif_icons/MEAS_VoltageSensor.gif'];

xpal = xcosPal("Electrical");

for i=1:size(Icons_list,1)
  palette_icon = toolbox_dir + filesep() + Icons_list(i);
  xcos_icon    = toolbox_dir + filesep() + Icons_list(i);
  macro_name   = basename(Icons_list(i));
  scs_m        = eval(macro_name + '(''define'')'); 
  export_to_hdf5(toolbox_dir + '/images/h5/' + macro_name + '.h5','scs_m');
  clear scs_m;
  //xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, xcos_icon);
  xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, palette_icon);
end

// Now save the palette
xcosPalExport(xpal, toolbox_dir + '/coselica_electrical.xpal');

//////////////////////////////////
// Mechanics rotational palette //
//////////////////////////////////

Icons_list = ['macros/Mechanics/Rotational/gif_icons/CMR_Position.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMR_TorqueStep.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/CMR_OneWayClutch.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/CMR_Clutch.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/CMRC_Disc.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMR_Damper.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMR_Accelerate.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMR_IdealPlanetary.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/CMR_Freewheel.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/CMR_Brake.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMRS_AngleSensor.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMR_IdealGear.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMRS_SpeedSensor.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/CMRC_ElastoBacklash.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/CMRS_PowerSensor.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMR_SpringDamper.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMR_Torque2.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMR_Fixed.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMR_QuadraticSpeedDepend.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMR_ElastoBacklash.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMRS_RelAccSensor.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMR_Torque.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/CMR_Speed.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/CMR_BearingFriction.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMRS_TorqueSensor.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMRS_RelAngleSensor.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMR_Spring.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMR_ConstantTorque.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMR_IdealGearR2T.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMRS_AccSensor.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMRS_RelSpeedSensor.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMR_ConstantSpeed.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMR_Inertia.gif'; ...
              'macros/Mechanics/Rotational/gif_icons/MMR_LinearSpeedDependent.gif'];

xpal = xcosPal("Mechanices rotational");

for i=1:size(Icons_list,1)
  palette_icon = toolbox_dir + filesep() + Icons_list(i);
  xcos_icon    = toolbox_dir + filesep() + Icons_list(i);
  macro_name   = basename(Icons_list(i));
  scs_m        = eval(macro_name + '(''define'')'); 
  export_to_hdf5(toolbox_dir + '/images/h5/' + macro_name + '.h5','scs_m');
  clear scs_m;
  //xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, xcos_icon);
  xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, palette_icon);
end

// Now save the palette
xcosPalExport(xpal, toolbox_dir + '/coselica_mechanics_rotational.xpal');

//////////////////////////////
// Mechanics planar palette //
//////////////////////////////

Icons_list = ['macros/Mechanics/Planar/gif_icons/CMPS_AbsPosition.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPJ_ActuatedRevolute.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_RelAngularVelocity.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_AbsAngle.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_RelPosition.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPJ_ActuatedPrismatic.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_CutTorque.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPP_Body.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_AbsVelocity.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_AbsAcceleration2.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_AbsAngularVelocity.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_RelVelocity2.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_Power.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPP_FixedTranslation.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_AbsAngularAccelerat.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPL_Prismatic.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMP_World.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPP_FixedRotation.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_RelAcceleration.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPF_FrameForce.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPL_ActuatedPrismatic.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_RelAngularAccelerat.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPF_LineForce.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_Angle.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPF_WorldForce.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_AbsPosition2.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_RelAcceleration2.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPJ_FreeMotion.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPJ_Prismatic.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_CutForce.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_RelVelocity.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_RelPosition2.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPP_BodyShape.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPL_ActuatedRevolute.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPF_WorldTorque.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_AbsAcceleration.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_Distance.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPJ_Revolute.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_CutForce2.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPL_Revolute.gif'; ...
              'macros/Mechanics/Planar/gif_icons/CMPS_AbsVelocity2.gif'];

xpal = xcosPal("Mechanices planar");

for i=1:size(Icons_list,1)
  palette_icon = toolbox_dir + filesep() + Icons_list(i);
  xcos_icon    = toolbox_dir + filesep() + Icons_list(i);
  macro_name   = basename(Icons_list(i));
  scs_m        = eval(macro_name + '(''define'')'); 
  export_to_hdf5(toolbox_dir + '/images/h5/' + macro_name + '.h5','scs_m');
  clear scs_m;
  //xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, xcos_icon);
  xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, palette_icon);
end

// Now save the palette
xcosPalExport(xpal, toolbox_dir + '/coselica_mechanics_planar.xpal');

/////////////////////////////////////
// Mechanics translational palette //
/////////////////////////////////////

Icons_list = ['macros/Mechanics/Translational/gif_icons/CMT_Stop.gif'; ...
              'macros/Mechanics/Translational/gif_icons/CMTS_ForceSensor.gif'; ...
              'macros/Mechanics/Translational/gif_icons/MMT_Fixed.gif'; ...
              'macros/Mechanics/Translational/gif_icons/MMT_SpringDamper.gif'; ...
              'macros/Mechanics/Translational/gif_icons/CMTS_PowerSensor.gif'; ...
              'macros/Mechanics/Translational/gif_icons/MMT_ElastoGap.gif'; ...
              'macros/Mechanics/Translational/gif_icons/CMTS_AccSensor.gif'; ...
              'macros/Mechanics/Translational/gif_icons/MMT_SlidingMass.gif'; ...
              'macros/Mechanics/Translational/gif_icons/CMTC_ElastoGap.gif'; ...
              'macros/Mechanics/Translational/gif_icons/CMT_Speed.gif'; ...
              'macros/Mechanics/Translational/gif_icons/CMT_MassWithFriction.gif'; ...
              'macros/Mechanics/Translational/gif_icons/CMTS_RelSpeedSensor.gif'; ...
              'macros/Mechanics/Translational/gif_icons/MMT_Force.gif'; ...
              'macros/Mechanics/Translational/gif_icons/MMT_Damper.gif'; ...
              'macros/Mechanics/Translational/gif_icons/CMTS_SpeedSensor.gif'; ...
              'macros/Mechanics/Translational/gif_icons/MMT_Accelerate.gif'; ...
              'macros/Mechanics/Translational/gif_icons/CMT_Position.gif'; ...
              'macros/Mechanics/Translational/gif_icons/CMTS_PositionSensor.gif'; ...
              'macros/Mechanics/Translational/gif_icons/CMTS_Force2.gif'; ...
              'macros/Mechanics/Translational/gif_icons/MMT_Spring.gif'; ...
              'macros/Mechanics/Translational/gif_icons/CMTS_RelPositionSensor.gif'; ...
              'macros/Mechanics/Translational/gif_icons/CMTS_RelAccSensor.gif'; ...
              'macros/Mechanics/Translational/gif_icons/MMT_Rod.gif'];

xpal = xcosPal("Mechanices translational");

for i=1:size(Icons_list,1)
  palette_icon = toolbox_dir + filesep() + Icons_list(i);
  xcos_icon    = toolbox_dir + filesep() + Icons_list(i);
  macro_name   = basename(Icons_list(i));
  scs_m        = eval(macro_name + '(''define'')'); 
  export_to_hdf5(toolbox_dir + '/images/h5/' + macro_name + '.h5','scs_m');
  clear scs_m;
  //xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, xcos_icon);
  xpal = xcosPalAddBlock(xpal, toolbox_dir + '/images/h5/' + macro_name + '.h5', palette_icon, palette_icon);
end

// Now save the palette
xcosPalExport(xpal, toolbox_dir + '/coselica_mechanics_translational.xpal');

// Clean variables
// =============================================================================

clear toolbox_dir TOOLBOX_NAME TOOLBOX_TITLE xpal palette_icon xcos_icon Icons_list;
