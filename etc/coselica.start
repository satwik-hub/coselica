// Copyright (C) 2010 - DIGITEO

// This file is released into the public domain

mprintf("Start COSELICA module\n");

if isdef("cos_mech_translib") then
	warning("COSELICA module is already loaded");
	return;
end

etc_tlbx  = get_absolute_file_path("coselica.start");
etc_tlbx  = getshortpathname(etc_tlbx);
root_tlbx = strncpy( etc_tlbx, length(etc_tlbx)-length("\etc\") );

//Load  functions library
// =============================================================================
mprintf("\tLoad macros\n");

pathmacros = pathconvert( root_tlbx ) + "macros" + filesep() + "Blocks/Continuous/";
cos_blocks_contlib = lib(pathmacros);
pathmacros = pathconvert( root_tlbx ) + "macros" + filesep() + "Blocks/Nonlinear/";
cos_blocks_nllib = lib(pathmacros);
pathmacros = pathconvert( root_tlbx ) + "macros" + filesep() + "Blocks/Interfaces/";
cos_blocks_interflib = lib(pathmacros);
pathmacros = pathconvert( root_tlbx ) + "macros" + filesep() + "Blocks/Math/";
cos_blocks_mathlib = lib(pathmacros);
pathmacros = pathconvert( root_tlbx ) + "macros" + filesep() + "Blocks/Routing/";
cos_blocks_routlib = lib(pathmacros);
pathmacros = pathconvert( root_tlbx ) + "macros" + filesep() + "Blocks/Sources/";
cos_blocks_srcslib = lib(pathmacros);
pathmacros = pathconvert( root_tlbx ) + "macros" + filesep() + "Thermal/HeatTransfer/";
cos_thermal_heattlib = lib(pathmacros);
pathmacros = pathconvert( root_tlbx ) + "macros" + filesep() + "Electrical/";
cos_eleclib = lib(pathmacros);
pathmacros = pathconvert( root_tlbx ) + "macros" + filesep() + "Mechanics/Rotational/";
cos_mech_rotlib = lib(pathmacros);
pathmacros = pathconvert( root_tlbx ) + "macros" + filesep() + "Mechanics/Planar/";
cos_mech_planlib = lib(pathmacros);
pathmacros = pathconvert( root_tlbx ) + "macros" + filesep() + "Mechanics/Translational/";
cos_mech_translib = lib(pathmacros);

clear pathmacros;

// load xcos libraries
// =============================================================================
loadXcosLibs();

// load palette
// =============================================================================

xcosPalAdd(root_tlbx + filesep() + 'CoselicaBlocksSources.xpal',                    ['Coselica', "Blocks"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaBlocksContinuous.xpal',                 ['Coselica', "Blocks"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaBlocksNonlinear.xpal',                  ['Coselica', "Blocks"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaBlocksInterfaces.xpal',                 ['Coselica', "Blocks"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaBlocksMath.xpal',                       ['Coselica', "Blocks"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaBlocksRouting.xpal',                    ['Coselica', "Blocks"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaElectricalSources.xpal',                ['Coselica', "Electrical"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaElectricalSensors.xpal',                ['Coselica', "Electrical"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaElectricalBasic.xpal',                  ['Coselica', "Electrical"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaElectricalIdeal.xpal',                  ['Coselica', "Electrical"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaElectricalSemiconductors.xpal',         ['Coselica', "Electrical"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaHeatTransfertSources.xpal',             ['Coselica', "Heat Transfert"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaHeatTransfertSensors.xpal',             ['Coselica', "Heat Transfert"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaHeatTransfertComponents.xpal',          ['Coselica', "Heat Transfert"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaHeatTransfertCelsius.xpal',             ['Coselica', "Heat Transfert"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaMechanicsTranslationalSources.xpal',    ['Coselica', "Mechanics", "Translational"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaMechanicsTranslationalSensors.xpal',    ['Coselica', "Mechanics", "Translational"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaMechanicsTranslationalComponents.xpal', ['Coselica', "Mechanics", "Translational"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaMechanicsRotationalSources.xpal',       ['Coselica', "Mechanics", "Rotational"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaMechanicsRotationalSensors.xpal',       ['Coselica', "Mechanics", "Rotational"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaMechanicsRotationalComponents.xpal',    ['Coselica', "Mechanics", "Rotational"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaMechanicsPlanarSources.xpal',           ['Coselica', "Mechanics", "Planar"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaMechanicsPlanarAbsoluteSensors.xpal',           ['Coselica', "Mechanics", "Planar", "Sensors"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaMechanicsPlanarRelativeSensors.xpal',           ['Coselica', "Mechanics", "Planar", "Sensors"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaMechanicsPlanarForces.xpal',            ['Coselica', "Mechanics", "Planar"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaMechanicsPlanarJoints.xpal',            ['Coselica', "Mechanics", "Planar"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaMechanicsPlanarLoopJoints.xpal',       ['Coselica', "Mechanics", "Planar"]);
xcosPalAdd(root_tlbx + filesep() + 'CoselicaMechanicsPlanarParts.xpal',            ['Coselica', "Mechanics", "Planar"]);

%MODELICA_USER_LIBS = root_tlbx + filesep() + 'macros';

clear root_tlbx;
clear etc_tlbx;
